c
self.friends
self.friend.id
self.friendships.find_by_user_id(self.id)
self.friendships.find_by_friend_id(self.id)
self.friendships.pluck(:status).find_by_friend_id(self.
self.friendships.pluck(:status).find_by_friend_id(self.id)
self.friendships.find_by_friend_id(self.id).status
c
@friends.first.status
@friends.first
@friends
c
@friends.status
@friends.first
@friends
c
Friendship.find_by_user_id_and_friend_id(user_id, self.id).status
Friendship.find_by_user_id_and_friend_id(user_id, self.id)
riendship.find_by_user_id_and_friend_id(user_id, self.id)
c
friendship.status
c
Friendship.find_by_user_id_and_friend_id(user, friend)
friendship
c
@relationship.first.update_attributes(status:'block')
@relationship.update_attributes(status:'block')
@relationship
c
Friendship.where("user_id = ? AND friend_id = ?", session[:user_id], params[:id]).pluck(:id)
Friendship.where("user_id = ? AND friend_id = ?", session[:user_id], params[:id])
ession[:user_id
friend1.id
friend1
c
User.pluck(:email).find(@message.recipient.split(",")).json
User.pluck(:email).find(@message.recipient.split(",")).json(",")
User.pluck(:email).find(@message.recipient.split(",")).join(",")
User.pluck(:email).find(params[:user_id]).join(",")
User.select(:email).find(params[:user_id])
raw @recipients
@recipients.to_json
@recipients
c
User.pluck(:email).find(params[:user_id])
@recipients.select(:email)
@recipients.pluck(:email)
@recipients.pluck(:email))
@recipients
c
@user.id != @message.user_id
c
cc
c
Message.where("recipient LIKE '%?%'", @user.id)
Message.where("recipient LIKE ''%?%''", @user.id)
c
Message.where("recipient LIKE ' %1%'")
Message.where("recipient LIKE %1%")
Message.where("recipient LIKE (1)")
Message.where("recipient LIKE 1")
Message.where("recipient LIKE %?%", @user.id)
c
User.where("email IN (?)", @message.recipient.split(',')).pluck(:id)*","
User.where("email IN (?)", @message.recipient.split(','))
User.where("email LIKE [?]", @message.recipient.split(','))
User.where("email LIKE [?]", @message.recipient)
User.where("email LIKE (?)", @message.recipient)
User.where("email IN (?)", @message.recipient)
User.where("email IN (?)", @message.recipient.to_json)
User.where("email IN (?)", @message.recipient.to_json).pluck(:id)*","
User.where("email IN (?)", @message.recipient.join(",")).pluck(:id)*","
User.where("email IN (?)", @message.recipient).pluck(:id)*","
@message.recipient
c
User.where(id: m.recipient.split(",")).pluck(:email)
User.where("id IN (?)", m.recipient.split(",")).pluck(:email)
User.where("email IN (?)", m.recipient.split(",")).pluck(:email)
User.where(email: m.recipient.split(",")).pluck(:email)
User.find(m.recipient.split(",")).pluck(:email)
User.pluck(:email).find(m.recipient.split(","))
User.select(:email).find(m.recipient.split(","))
User.select(:id).find(m.recipient.split(","))
User.find(m.recipient.split(",")).select(:email)
User.find(m.recipient.split(","))
c
User.where("email IN (?)", @message.recipient).pluck(:id)*","
User.where("email IN (?)", @message.recipient).pluck(:id).to_set
User.where("email IN (?)", @message.recipient).pluck(:id).to_text
User.where("email IN (?)", @message.recipient).pluck(:id).to_String
User.where("email IN (?)", @message.recipient).pluck(:id).toString
User.where("email IN (?)", @message.recipient).pluck(:id)
User.where("email IN (?)", @message.recipient).select(:id)
User.where("email IN (?)", @message.recipient)
User.where("email IN ?", @message.recipient)
@message
c
@message
c
@message
c
@message
c
@message
n
@message
recipientsList
params[:content]
@message
message_params
@message
@message.recipient
c
@friends.pluck(:id)
@friends.select(:id)
@user.friends
c
User.where("id != (?) AND id NOT IN (?)", @user.id, @user.friends.pluck(:id))
c
get_list_friends(friendships)
c
friendships.users
friendships.user
friendships.friend
friendships
c
friendships
c
@user.authenticate(params[:password])
User.find_by(email: params[:email].strip)
n
params[:email].strip
params[:email]
c
params[:email]
